1. You have been given a perfect binary tree of 'N' nodes. Your task is to reverse alternate levels of the given binary tree. That is reverse level 2, level 4, level 6, and so on. The root is at level 1. A perfect binary tree is a binary tree in which all the interior nodes have two children, and all leaves have the same depth or same level.
 Trapping Rain Water--->You have been given a long type array/list 'arr’ of size 'n’.It represents an elevation map wherein 'arr[i]’ denotes the elevation of the 'ith' bar. Print the total amount of rainwater that can be trapped in these elevations. (The width of each bar is the same and is equal to 1.)
 Binary Tree Pruning---->You have been given a Binary Tree where the value of each node is either 0 or 1. Your task is to return the same Binary Tree but all of its subtrees that don't contain a 1 have been removed.Note :A subtree of a node X is X, plus every node that is a descendant of X. Look at the below example to see a Binary Tree pruning.Input: [1, 1, 1, 0, 1, 0, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1].   Output: [1, 1, 1, -1, 1, -1, 1, -1, -1, -1, -1].
  LCA of three Nodes---> You have been given a Binary Tree of 'N' nodes where the nodes have integer values and three integers 'N1', 'N2', and 'N3'. Find the LCA(Lowest Common Ancestor) of the three nodes represented by the given three('N1', 'N2', 'N3') integer values in the Binary Tree.
  